let cols = 9; // 列數
let rows = 9; // 行數
let gridSize = 30; // 每個方格的大小
let pattern = []; // 用於儲存矩陣數據
let resultDiv; // 用於顯示結果的 div

function setup() {
  createCanvas(cols * gridSize, rows * gridSize + 100); // 設置畫布大小，增加下方空間
  noStroke(); // 取消邊框
  // 初始化矩陣，所有值為0
  for (let i = 0; i < rows; i++) {
    pattern[i] = Array(cols).fill(0);
  }

  // 創建顯示結果的 div
  resultDiv = createDiv('');
  resultDiv.position(10, rows * gridSize + 80); // 設置位置
  resultDiv.style('font-size', '16px'); // 設置字體大小
  resultDiv.style('color', 'black'); // 設置字體顏色
  resultDiv.style('background-color', '#ffffff'); // 設置背景顏色
  resultDiv.style('padding', '10px'); // 設置內邊距
  resultDiv.style('border', '1px solid #000'); // 設置邊框
}

function draw() {
  background(220); // 背景顏色

  // 繪製方格
  for (let y = 0; y < rows; y++) {
    for (let x = 0; x < cols; x++) {
      if (pattern[y][x] === 1) {
        fill('#FF0000'); // 被點擊的方格為紅色
      } else {
        fill('#000000'); // 未被點擊的方格為黑色
      }
      rect(x * gridSize, y * gridSize, gridSize, gridSize);
    }
  }
  
  // 顯示說明文字
  fill(0); // 設置文本顏色為黑色
  textSize(16); // 設置文本大小
  text("點擊方格以切換顏色", 10, rows * gridSize + 20);
  text("紅色=1, 黑色=0", 10, rows * gridSize + 40);
  text("按 S 鍵於下方輸出矩陣", 10, rows * gridSize + 60);
}

function mousePressed() {
  // 獲取鼠標所在的方格坐標
  let x = floor(mouseX / gridSize);
  let y = floor(mouseY / gridSize);

  // 確保點擊在範圍內
  if (x >= 0 && x < cols && y >= 0 && y < rows) {
    if (pattern[y][x] === 1) {
      // 如果當前是紅色，則變回黑色
      pattern[y][x] = 0; // 將被點擊的方格的值設置為0
    } else {
      // 否則，設置為紅色
      pattern[y][x] = 1; // 將被點擊的方格的值設置為1
    }
  }
}

// 輸出矩陣的函數
function keyPressed() {
  if (key === 's' || key === 'S') { // 按下 S 鍵時輸出矩陣
    let output = pattern.map(row => row.join(',')).join(';'); // 格式化輸出
    console.log(output); // 在控制台輸出
    resultDiv.html(output); // 將結果顯示在 div 中
  }
}
